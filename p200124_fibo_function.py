# =============================================================================
# 2020-01-24
# programming challenge from SciPy Lecture Notes
# section 1.2.4 Getting Started > The Python Language > Functions
# https://scipy-lectures.org/intro/language/functions.html
# Display first n terms of Fibonacci sequence
# =============================================================================

def fibo_term_count(n):
    seq = [0,1]
    while len(seq) < n:
        seq.append(seq[-1] + seq[-2])
    return(seq)

# print first 12 terms in the sequence
print(fibo_term_count(12))


# =============================================================================
# 2020-01-26
# write another one
#    but instead of n terms,
#    displays Fibo series up to the last term less than a given maximum
# =============================================================================

def fibo_term_value(n):
    seq = [0,1]
    while seq[-1] < n:
        seq.append(seq[-1] + seq[-2])
    else:
        seq.pop() # the last value was too high, remove it
    return(seq)

# print the sequence of terms that are less than 1 million
print(fibo_term_value(1e6))


# =============================================================================
# 2020-02-13
# write a fibo generator function
# =============================================================================

def fibo_gen():
    a, b = 0, 1
    while True:
        yield b # this is what makes it a generator function
        a, b = b, a + b

# print some values generated by the generator
g1 = fibo_gen()
for i in range(12):
    print(next(g1), end=", ")

